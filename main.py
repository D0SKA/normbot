import logging
import asyncio
from datetime import datetime, timezone, timedelta
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command
from flask import Flask

TOKEN = "7764144868:AAE33JoxFweP3b_lFvG9ETGkbiWfYVdG6ZU"
ADMIN_ID = 7718841139  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID

logging.basicConfig(level=logging.INFO)
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –£–∫—Ä–∞–∏–Ω—ã
UA_TIMEZONE = timezone(timedelta(hours=2))


def is_working_hours():
    now = datetime.now(UA_TIMEZONE)
    hour = now.hour
    weekday = now.weekday()

    if weekday < 5:  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞
        return 11 <= hour < 22
    else:  # –°—É–±–±–æ—Ç–∞ - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
        return 10 <= hour < 23


@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç D0SKA store! üéâ –ú—ã —Ü–µ–Ω–∏–º –∫–∞—á–µ—Å—Ç–≤–æ, –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ —É–¥–æ–±—Å—Ç–≤–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!"
    )

    keyboard_rules = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –Ø —Å–æ–≥–ª–∞—Å–µ–Ω, —Ö–æ—á—É —É–∂–µ –∞–∫–∫–∞—É–Ω—Çüòí", callback_data="understood")]
        ]
    )

    await message.answer(
        "üìú *–ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è –≤ D0SKA store:*\n\n"
        "1Ô∏è‚É£ *–ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã –∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã* ‚Äî –æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º, –±–µ–∑ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π –∏ –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏.\n"
        "2Ô∏è‚É£ *–ù–µ —Å–ø–∞–º—å—Ç–µ* ‚Äî –∏–∑–ª–∏—à–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ—à–∞—é—Ç —Ä–∞–±–æ—Ç–µ —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.\n"
        "3Ô∏è‚É£ *–£—Ç–æ—á–Ω—è–π—Ç–µ –≤—Å–µ –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π* ‚Äî –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–µ–¥–æ—Ä–∞–∑—É–º–µ–Ω–∏–π.\n"
        "4Ô∏è‚É£ *–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ ‚Äî 5 –¥–Ω–µ–π* ‚è≥:\n"
        "   - –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–ª—É—á–∞–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º.\n"
        "   - –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ –≤–∞—à–µ–π –≤–∏–Ω–µ ‚Äî –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç.\n"
        "   - –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Ç–æ–≥–æ, —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º –∏–ª–∏ –≤–∏–¥–µ–æ).\n\n"
        "üïí *–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã (–ø–æ –ö–∏–µ–≤—É):*\n"
        "üìÖ *–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞:* 11:00 - 22:00\n"
        "üìÖ *–°—É–±–±–æ—Ç–∞ - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ:* 10:00 - 23:00\n\n"
        "‚úÖ –ï—Å–ª–∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        parse_mode="Markdown",
        reply_markup=keyboard_rules
    )


@dp.callback_query(lambda c: c.data == "understood")
async def understood_callback(callback: CallbackQuery):
    await callback.message.answer(
        "üìù *–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É:*\n"
        "- –ò–≥—Ä–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ üéÆ\n"
        "- –ß—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ üîç\n"
        "- –ë—é–¥–∂–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –≥—Ä–Ω/—Ä—É–± üí∞\n\n"
        "‚úç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!",
        parse_mode="Markdown"
    )
    await callback.answer()


@dp.message()
async def receive_survey(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or "NoUsername"
    survey_data = message.text

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É –ø—Ä–æ–¥–∞–≤—Ü—É —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboard_admin = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", url=f"tg://user?id={user_id}")]
        ]
    )
    await bot.send_message(
        ADMIN_ID,
        f"üì© –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –æ—Ç @{username} (ID: {user_id}):\n{survey_data}",
        reply_markup=keyboard_admin
    )

    # –ï—Å–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –æ—Ç–¥—ã—Ö–∞–µ—Ç ‚Äì —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not is_working_hours():
        await message.answer("üò¥ –ü—Ä–æ–¥–∞–≤–µ—Ü —Å–µ–π—á–∞—Å –æ—Ç–¥—ã—Ö–∞–µ—Ç. –û–Ω –ø–æ–ª—É—á–∏–ª –≤–∞—à—É –∞–Ω–∫–µ—Ç—É, –Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è! üïí")
    else:
        await message.answer("‚úÖ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–¥–∞–≤—Ü—É! –û–Ω —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.")


async def main():
    await dp.start_polling(bot)


# Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è health check
app = Flask(__name__)


@app.route("/")
def home():
    return "Bot is running!", 200


if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.create_task(main())

    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ health check
    app.run(host="0.0.0.0", port=8000)